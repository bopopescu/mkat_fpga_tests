#!/bin/bash
# Automated instrument activation
# Mpho Mphego

if [ -z "$*" ];
    then echo -e "Usage: $0 INSTRUMENT RESTART_CMC START_DSIM KATCP_HOST_IP CONF_PATH \n
    INSTRUMENT: e.g. bc8n856M4k (CASE SENSATIVE)
    RESTART_CMC: [y]/n
    START_DSIM: [y]/n (If not restarted hosts will not be deprogrammed)
    INSTRUMENT_OPTS: 1011 (Default) / Inststrument activate options, 1=enable, 0=disable [program, calibrate qdr, require synchronisation epoch, monitor vector accumulators]
    KATCP_HOST_IP: localhost (Default) / IP
    CONF_PATH: /etc/corr/templates/ (Default)"
    exit 1;
fi

export TERM=xterm
PATH=/usr/local/sbin:/usr/local/bin:$PATH

BLACK=$(tput setaf 0)
RED=$(tput setaf 1)
GREEN=$(tput setaf 2)
YELLOW=$(tput setaf 3)
LIME_YELLOW=$(tput setaf 190)
POWDER_BLUE=$(tput setaf 153)
BLUE=$(tput setaf 4)
MAGENTA=$(tput setaf 5)
CYAN=$(tput setaf 6)
WHITE=$(tput setaf 7)
BRIGHT=$(tput bold)
NORMAL=$(tput sgr0)
BLINK=$(tput blink)
REVERSE=$(tput smso)
UNDERLINE=$(tput smul)

MACHINE=$(hostname)
INSTRUMENT=$1
RESTART_CMC=${2:-y}
START_DSIM=${3:-y}
INST_OPTS=${4:-1011}
PROG=${INST_OPTS:0:1}
CALQDR=${INST_OPTS:1:1}
REPOCH=${INST_OPTS:2:1}
MVACC=${INST_OPTS:3:1}
MACHINE_IP=${5:-localhost}
CONF_PATH=${6:-'/etc/corr/templates/'}
CONF_PATH=${CONF_PATH}${INSTRUMENT}
VPOL=$(grep -v \#  $CONF_PATH | grep pol0_destination_start_ip | cut -f 3 -d' ')
HPOL=$(grep -v \#  $CONF_PATH | grep pol1_destination_start_ip | cut -f 3 -d' ')
DATAPORT=$(grep 10gbe_port $CONF_PATH | tail -1 | cut -f 3 -d' ')
KCPCMD=/usr/local/bin/kcpcmd

if [ $RESTART_CMC == y ]; then
    sudo /etc/init.d/cmc stop
    sleep 2
    echo ''
    sudo /etc/init.d/cmc start
fi


function repeatStr {
    input=$1
    count=$2
    myString=$(printf "%${count}s")
    echo "${myString// /$input }"
}

printf  "${GREEN}Initialisation ${INSTRUMENT} on ${MACHINE_IP} ${NORMAL}\n"
let "NUM_INPUTS =  ($(grep source_names $CONF_PATH | grep -o , | wc -l)+1)/2"
ARRAY_INPUTS=`repeatStr "${VPOL}+1:${DATAPORT} ${HPOL}+1:${DATAPORT}" $NUM_INPUTS`

printf "${GREEN}FEngine Multicast IPs (VPOL: ${HPOL} and HPOL: ${VPOL}), Port: ${DATAPORT} ${NORMAL}\n"

export CORR2INI=$CONF_PATH;
if [ $START_DSIM == y ]; then
    printf "${GREEN}Deprogramming hosts ${NORMAL}\n\n";
    if /usr/local/bin/corr2_deprogram.py >> /dev/null 2>&1;
        then printf "${GREEN}All Hosts deprogrammed ${NORMAL}\n\n";
    else
        printf "${RED}Failed to deprogram ${NORMAL}\n\n";
    fi
    StopDMC="/usr/local/bin/stop-pseudo-dmc";
    if [ -x "$(command -v $StopDMC)" ]; then
        $StopDMC || $KCPCMD -t 30 -s localhost:9010 halt
    fi

    sleep 5;
    DSIM=$(grep ^host $CONF_PATH | tail -1 | cut -d ' ' -f 3);
    /usr/local/bin/start-pseudo-dmc $DSIM;
    printf '';
    sleep 2;
    /usr/local/bin/corr2_dsim_control.py --program --start --status;
fi
/usr/local/bin/corr2_dsim_control.py --zeros-sine --zeros-noise;

printf "${GREEN}Initialising INSTRUMENT: ${INSTRUMENT} ${NORMAL}\n\n";
while true;
    do printf '';
    $KCPCMD -t 31 -s ${MACHINE_IP}:7147 subordinate-halt array0  || true;
    sleep 0.5;
    ARRAY=$($KCPCMD -t 30 -s ${MACHINE_IP}:7147 subordinate-create array0 ${ARRAY_INPUTS} | grep -a '!subordinate-create' | cut -d ' ' -f 3);
    printf "${GREEN}\nPort number seems to be ${ARRAY} ${NORMAL}\n";
    SYNC_EPOCH=$($KCPCMD -s ${MACHINE_IP}:9011 sensor-value synchronisation-epoch | grep -a '^#sensor-value' | cut -f 6 -d' ');
    SYNC_TIME=$(date -d @$SYNC_EPOCH)
    printf "${GREEN}\nSynchronisation Epoch = ${SYNC_TIME} ${NORMAL}\n";
    sleep 0.5;
    $KCPCMD -t 500 -s $MACHINE_IP:$ARRAY instrument-activate $INSTRUMENT $PROG $CALQDR $REPOCH $MVACC && break;
    sleep 2;
done

sleep 1;
if [ $(echo ${MACHINE::4}) == 'cmc1' ]; then
    printf "${GREEN} Copying config file over to CMC2 and CMC3${NORMAL}"
    scp /etc/corr/array0-* ${USER}@10.103.254.3:/etc/corr
    scp /etc/corr/array0-* ${USER}@10.103.254.6:/etc/corr
fi
