#!/bin/bash
# Automated instrument activation
# Mpho Mphego

if [ -z "$*" ];
    then echo -e "Usage: $0 KATCP_HOST_IP INSTRUMENT INSTRUMENT_OPTS START_DSIM CONF_PATH \n

    KATCP_HOST_IP: localhost (Default)/IP
    INSTRUMENT: e.g. bc8n856M4k (CASE SENSATIVE)
    INSTRUMENT_OPTS: 1110 (Default) :instrument-activate options, 1=enable, 0=disable
                                     [program, configure, require synchronisation epoch, monitor vector accumulators]
    START_DSIM: [y]/n (If not restarted hosts will not be deprogrammed)
    CONF_PATH: /etc/corr/templates/ (Default)"
    exit 1;
fi

export TERM=xterm
PATH=/usr/local/sbin:/usr/local/bin:~/bin:$PATH
KCPCMD=/usr/local/bin/kcpcmd

RED=$(tput setaf 1)
GREEN=$(tput setaf 2)
NORMAL=$(tput sgr0)

MACHINE=$(hostname)
KATCP_HOST_IP=${1:-${MACHINE}}
INSTRUMENT=$2
INSTRUMENT_OPTS=${3:-1110}
PROG=${INSTRUMENT_OPTS:0:1}
CONFIGURE=${INSTRUMENT_OPTS:1:1}
REPOCH=${INSTRUMENT_OPTS:2:1}
MVACC=${INSTRUMENT_OPTS:3:1}

START_DSIM=${4:-n}


CONF_PATH=${6:-'/etc/corr/templates/'}
CONF_PATH=${CONF_PATH}${INSTRUMENT}

VPOL=$(grep -v \#  $CONF_PATH | grep pol0_destination_start_ip | cut -f 3 -d' ')
HPOL=$(grep -v \#  $CONF_PATH | grep pol1_destination_start_ip | cut -f 3 -d' ')
DATAPORT=$(grep 10gbe_port $CONF_PATH | tail -1 | cut -f 3 -d' ')

function repeatStr {
    input=$1
    count=$2
    myString=$(printf "%${count}s")
    echo "${myString// /$input }"
}


printf  "${GREEN}Initialisation ${INSTRUMENT} on ${KATCP_HOST_IP} ${NORMAL}\n"
let "NUM_INPUTS = ($(grep source_names ${CONF_PATH} | grep -o , | wc -l)+1)/2"
ARRAY_INPUTS=`repeatStr "${VPOL}+1:${DATAPORT} ${HPOL}+1:${DATAPORT}" $NUM_INPUTS`

printf "${GREEN}FEngine Multicast IPs (VPOL: ${HPOL} and HPOL: ${VPOL}), Port: ${DATAPORT} ${NORMAL}\n"

export CORR2INI=${CONF_PATH};
if [ ${START_DSIM} == y ]; then
    #printf "${GREEN}Deprogramming hosts ${NORMAL}\n\n";
    #if /usr/local/bin/corr2_deprogram.py >> /dev/null 2>&1;
    #    then printf "${GREEN}All Hosts deprogrammed ${NORMAL}\n\n";
    #else
    #    printf "${RED}Failed to deprogram ${NORMAL}\n\n";
    #fi

    DSIM=$(grep ^host $CONF_PATH | tail -1 | cut -d ' ' -f 3);
    while true; do
        StopDMC="/usr/local/bin/stop-pseudo-dmc";
        StartDMC="/usr/local/bin/start-pseudo-dmc";

        if [ -x "$(command -v ${StopDMC})" ]; then
            ${StopDMC} || ${KCPCMD} -t 30 -s localhost:9010 halt
            sleep 10;
        fi

        if [ -x "$(command -v ${StartDMC})" ]; then
            ${StartDMC} ${DSIM}
            sleep 10;
        fi

        printf "${GREEN}Starting DEngine...${NORMAL}\n"
        corr2_dsim_control.py --loglevel INFO --program --start --zeros-sine --zeros-noise && break;
        SYNC_EPOCH=$(corr2_dsim_control.py --loglevel INFO --resync | grep ^Reset | cut -f7 -d ' ')
        # SYNC_EPOCH=$($KCPCMD -s ${KATCP_HOST_IP}:9011 sensor-value synchronisation-epoch | grep -a '^#sensor-value' | cut -f 2 -d' ')
        SYNC_TIME=$(date -d @${SYNC_EPOCH})
        printf "${GREEN}\nSynchronisation Epoch = ${SYNC_TIME} ${NORMAL}\n"
        sleep 1;
        ${KCPCMD} -t 500 -s $KATCP_HOST_IP:${ARRAY} digitiser-synch-epoch ${SYNC_EPOCH}
        sleep 60;
    done;
else
    printf "${GREEN}DEngine is currently running...${NORMAL}\n"
fi

printf "${GREEN}Initialising INSTRUMENT: ${INSTRUMENT} ${NORMAL}\n\n"
${KCPCMD} -t 31 -s ${KATCP_HOST_IP}:7147 subordinate-halt array0 || true
# sleep 60
ARRAY=$(${KCPCMD} -t 30 -s ${KATCP_HOST_IP}:7147 subordinate-create array0 ${ARRAY_INPUTS} | grep -a '!subordinate-create' | cut -d ' ' -f 3)
printf "${GREEN}\nPort number seems to be ${ARRAY} ${NORMAL}\n"

sleep 0.5;
${KCPCMD} -t 500 -s $KATCP_HOST_IP:${ARRAY} instrument-activate ${INSTRUMENT} ${PROG} ${CONFIGURE} ${REPOCH} ${MVACC}
sleep 2;

if [ $(echo ${MACHINE::4}) == "cmc3" ]; then
    printf "${GREEN} Copying config file over to CMC2${NORMAL}\n"
    scp /etc/corr/array0-* ${USER}@10.103.254.3:/etc/corr
fi